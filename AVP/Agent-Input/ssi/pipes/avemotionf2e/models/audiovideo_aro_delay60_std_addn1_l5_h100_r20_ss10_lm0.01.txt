
>>> running step:10,  best valid: [0.51219531 0.51224727 0.58963992 0.6395288  0.6395288 ], best test [0.26633739 0.26638284 0.31711748 0.36147633 0.36147633]
>>> running step:20,  best valid: [0.63858955 0.63863029 0.67557063 0.70791424 0.70791424], best test [0.53626633 0.53631098 0.55184836 0.55596166 0.55596166]
>>> running step:30,  best valid: [0.70740755 0.70747391 0.73581729 0.74757379 0.74757379], best test [0.60892044 0.6089881  0.61743731 0.62827324 0.62827324]
>>> running step:40,  best valid: [0.73033469 0.73039278 0.75644386 0.77752066 0.77752066], best test [0.62247343 0.62252832 0.63199513 0.64079924 0.64079924]
>>> running step:60,  best valid: [0.72300196 0.72305894 0.74543455 0.78156183 0.78156183], best test [0.60727589 0.60730338 0.61729539 0.64992232 0.64992232]
>>> running step:70,  best valid: [0.74358561 0.74365508 0.77555816 0.79307112 0.79307112], best test [0.63262595 0.63266382 0.64586409 0.6608616  0.6608616 ]
>>> running step:80,  best valid: [0.75005099 0.7501165  0.79403285 0.79533334 0.79533334], best test [0.57957159 0.57960641 0.61808442 0.62209361 0.62209361]
>>> running step:90,  best valid: [0.78994908 0.79001143 0.80062558 0.80322897 0.80322897], best test [0.64309246 0.64312472 0.64812237 0.65270365 0.65270365]
>>> running step:120,  best valid: [0.77698436 0.77704086 0.80600104 0.81060162 0.81060162], best test [0.63126732 0.63128962 0.6464344  0.65188441 0.65188441]
>>> running step:10,  best valid: [0.66353557 0.66359785 0.67324065 0.67655377 0.67655377], best test [0.3972804  0.39731783 0.40954345 0.41468876 0.41468876]
>>> running step:20,  best valid: [0.74444164 0.74451149 0.75817213 0.76513227 0.76513227], best test [0.51757322 0.51763376 0.52278387 0.53701965 0.53701965]
>>> running step:30,  best valid: [0.7849672  0.78503379 0.79273338 0.79718417 0.79718417], best test [0.62323279 0.62329395 0.62346058 0.62389624 0.62389624]
>>> running step:40,  best valid: [0.70599855 0.70604704 0.75243419 0.79641375 0.79641375], best test [0.56890287 0.56892687 0.58708597 0.62512776 0.62512776]
>>> running step:50,  best valid: [0.75170935 0.75177274 0.80120623 0.80920933 0.80920933], best test [0.64105001 0.64108145 0.66504595 0.67254382 0.67254382]
>>> running step:60,  best valid: [0.79763433 0.79770845 0.81220505 0.81679086 0.81679086], best test [0.61814607 0.61818388 0.62434724 0.63249258 0.63249258]
>>> running step:70,  best valid: [0.78060046 0.78066755 0.81829805 0.82020861 0.82020861], best test [0.66027007 0.66031154 0.67491228 0.67824427 0.67824427]
>>> running step:80,  best valid: [0.79802634 0.79807911 0.8223612  0.82236699 0.82236699], best test [0.66784971 0.66788655 0.67823582 0.67835979 0.67835979]
>>> running step:90,  best valid: [0.79370451 0.79377019 0.81798923 0.82567349 0.82567349], best test [0.63450695 0.63455014 0.64862473 0.66078122 0.66078122]
>>> running step:100,  best valid: [0.80087198 0.80093308 0.82293097 0.82569082 0.82569082], best test [0.67959049 0.67962936 0.68241706 0.68717522 0.68717522]
>>> running step:110,  best valid: [0.80449217 0.80455875 0.82029227 0.82837395 0.82837395], best test [0.66015055 0.66019087 0.66179483 0.67234874 0.67234874]
>>> running step:120,  best valid: [0.79365916 0.79371776 0.81509353 0.82211104 0.82211104], best test [0.68064662 0.680691   0.67919945 0.68697558 0.68697558]
>>> running step:130,  best valid: [0.7969707  0.79703699 0.82210127 0.82635543 0.82635543], best test [0.67261403 0.67265671 0.68077244 0.68796986 0.68796986]
>>> running step:140,  best valid: [0.79600334 0.79606769 0.82213135 0.8272009  0.8272009 ], best test [0.6461249  0.64617592 0.66078053 0.67145336 0.67145336]
>>> running step:150,  best valid: [0.78969715 0.78976381 0.82058311 0.82501323 0.82501323], best test [0.65178187 0.65183049 0.66662286 0.67523268 0.67523268]
>>> running step:160,  best valid: [0.79357947 0.79364267 0.82167317 0.82402385 0.82402385], best test [0.65969023 0.65973493 0.6706211  0.67616399 0.67616399]
>>> running step:170,  best valid: [0.79429173 0.79436009 0.82177273 0.82407686 0.82407686], best test [0.66358642 0.66364313 0.675145   0.680505   0.680505  ]
>>> running step:180,  best valid: [0.792315   0.79238372 0.82115409 0.8226145  0.8226145 ], best test [0.65616528 0.65622866 0.67087608 0.67548714 0.67548714]
>>> running step:190,  best valid: [0.78028977 0.78035808 0.81459449 0.81981794 0.81981794], best test [0.63118233 0.63125432 0.65230811 0.66278023 0.66278023]
>>> running step:200,  best valid: [0.78768858 0.78775935 0.82198486 0.82216502 0.82216502], best test [0.67590863 0.67597424 0.69339337 0.69440524 0.69440524]